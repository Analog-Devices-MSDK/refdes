apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'com.chaquo.python'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'

def androidExclusion = [
        'android/**/*.*',
        '**/databinding/**/*.*',
        '**/android/databinding/*Binding.*',
        '**/BR.*',
        '**/R.*',
        '**/R$*.*',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*_MembersInjector.*',
        '**/Dagger*Component.*',
        '**/Dagger*Component$Builder.*',
        '**/*Module_*Factory.*',
        //'**/*Fragment*.*',
        '**/*Activity*.*',
        '**/*Adapter*.*',
        '**/*ViewPager*.*',
        //'**/*ViewHolder*.*',
        '**/*Module*.*',
        '**/Lambda$*.class',
        '**/Lambda.class',
        '**/*Lambda.class',
        '**/*Lambda*.class',
        '**/Lambda*.*',
        '**/*Builder.*',
        '**/*Component*.*',
        '**/com/maximintegrated/maxcamandroid/exts/**/*',
]

jacoco {
    toolVersion config.jacocoVersion
    reportsDir = file("report")
}

// run ./gradlew clean createDebugCoverageReport jacocoTestReport

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: androidExclusion)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: [
            '**/*.exec', '**/*.ec'
    ])
}

android {
    compileSdkVersion config.compileSdk
    buildToolsVersion config.buildToolsVersion
    dataBinding {
        enabled true
    }
    defaultConfig {
        applicationId "com.maximintegrated.maxcamandroid"
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        ndk {
            abiFilters "arm64-v8a"
        }

        sourceSets {
            main {
                python.srcDir "src/main/python/db_gen"
            }
        }

        python {
            pip {
                install "numpy"
                install "opencv-python"
                install "torch"
                install "torchvision"
            }
            /*pyc {
                src false // pip, stdlib
            }*/
            //staticProxy "module.one", "module.two"
            //buildPython "C:/path/to/python.exe"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    androidExtensions {
        experimental = true
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
    buildFeatures {
        viewBinding true
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':style')
    implementation project(':bluetooth')
    implementation project(':communication')

    implementation deps.kotlinStdLib
    implementation deps.appcompat
    implementation deps.material
    implementation deps.constraintLayout
    implementation deps.recyclerView

    implementation deps.lifecycleExtensions
    implementation deps.lifecycleCommon
    implementation deps.liveData
    implementation deps.viewModel

    implementation deps.ktx
    implementation deps.timber
    implementation deps.kotpref
    implementation deps.kotprefInitializer

    implementation deps.bleLibrary
    implementation deps.bleCommon

    implementation deps.bluetoothStateView
    implementation deps.batteryMeterView

    implementation deps.legacySupport
    testImplementation deps.junit
    androidTestImplementation deps.atsl
    androidTestImplementation deps.espresso
    androidTestImplementation deps.espressoIntents
    androidTestImplementation deps.extJunit
    testImplementation deps.extJunitKtx
    testImplementation deps.hamcrest
    testImplementation deps.testCoreKtx
    testImplementation deps.robolectric
    testImplementation deps.archCoreTesting
    testImplementation deps.coroutineTest
    androidTestImplementation deps.junit
    androidTestImplementation deps.coroutineTest
    debugImplementation deps.fragmentTest
    implementation deps.testCore
    androidTestImplementation deps.espressoContrib

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.MikeOrtiz:TouchImageView:3.0.1' // Android X

    implementation deps.roomRuntime
    annotationProcessor deps.roomCompiler
    kapt deps.roomPersistence

    implementation deps.coroutine
    implementation 'com.github.bmelnychuk:atv:1.2.9'
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation deps.gson

    if (JavaVersion.current().ordinal() >= JavaVersion.VERSION_1_9.ordinal()) {
        kapt 'javax.xml.bind:jaxb-api:2.3.1'
        kapt 'com.sun.xml.bind:jaxb-core:2.3.0.1'
        kapt 'com.sun.xml.bind:jaxb-impl:2.3.2'

        annotationProcessor 'javax.xml.bind:jaxb-api:2.3.1'
        annotationProcessor 'com.sun.xml.bind:jaxb-core:2.3.0.1'
        annotationProcessor 'com.sun.xml.bind:jaxb-impl:2.3.2'
    }
}
